Microsoft (R) Macro Assembler Version 14.29.30146.0	    10/11/22 21:28:50
8Project One Basic Arithmetic Program     (Proj1_dyb.asm     Page 1 - 1


				TITLE Project One Basic Arithmetic Program     (Proj1_dyb.asm)

				; Author: Brian Dy
				; Last Modified: 10/11/2022
				; OSU email address: dyb@oregonstate.edu
				; Course number/section:   CS271 Section 400
				; Project Number: Project 1                Due Date: 10/16/2022
				; Description: A simple arithmetic program where a user enters 3 numbers and the program adds/ subtracts and outputs the values

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; (insert macro definitions here)

				; (insert constant definitions here)

 00000000			.data

 00000000 42 72 69 61 6E	 username				BYTE	"Brian Dy", 0																	; Displays the name
	   20 44 79 00
 00000009 45 6C 65 6D 65	 programtitle			BYTE	"Elementary Arithmetic by: ", 0													; Display the title of the project
	   6E 74 61 72 79
	   20 41 72 69 74
	   68 6D 65 74 69
	   63 20 62 79 3A
	   20 00
 00000024 45 6E 74 65 72	 introduction			BYTE	"Enter 3 numbers A > B > C, and i'll show you the sums and differences.",0		; Display the introduction for the user  
	   20 33 20 6E 75
	   6D 62 65 72 73
	   20 41 20 3E 20
	   42 20 3E 20 43
	   2C 20 61 6E 64
	   20 69 27 6C 6C
	   20 73 68 6F 77
	   20 79 6F 75 20
	   74 68 65 20 73
	   75 6D 73 20 61
	   6E 64 20 64 69
	   66 66 65 72 65
	   6E 63 65 73 2E
	   00
 0000006B 45 6E 74 65 72	 prompt_1				BYTE	"Enter the first number: ", 0													; Prompt the user to enter the first number
	   20 74 68 65 20
	   66 69 72 73 74
	   20 6E 75 6D 62
	   65 72 3A 20 00
 00000084 45 6E 74 65 72	 prompt_2				BYTE	"Enter the second number: ", 0													; Prompt the user to enter the second number
	   20 74 68 65 20
	   73 65 63 6F 6E
	   64 20 6E 75 6D
	   62 65 72 3A 20
	   00
 0000009E 45 6E 74 65 72	 prompt_3				BYTE	"Enter the third number: ", 0													; Prompt the user to enter the third number
	   20 74 68 65 20
	   74 68 69 72 64
	   20 6E 75 6D 62
	   65 72 3A 20 00
 000000B7 00000000		 first_number			DWORD	?
 000000BB 00000000		 second_number			DWORD	?
 000000BF 00000000		 third_number			DWORD	?
 000000C3 54 68 61 6E 6B	 closing_message		BYTE	"Thanks for using Elementary Arithmetic! Goodbye!",0							; Displays the closing statement for the program
	   73 20 66 6F 72
	   20 75 73 69 6E
	   67 20 45 6C 65
	   6D 65 6E 74 61
	   72 79 20 41 72
	   69 74 68 6D 65
	   74 69 63 21 20
	   47 6F 6F 64 62
	   79 65 21 00
 000000F4 00000000		 sum					DWORD	?
 000000F8 00000000		 difference				DWORD	?
 000000FC 46 69 72 73 74	 first_number_string	BYTE	"First number: ", 0																; Variable to display the "first number" string
	   20 6E 75 6D 62
	   65 72 3A 20 00
 0000010B 53 65 63 6F 6E	 second_number_string	BYTE	"Second number: ", 0															; Variable to display the "second number" string
	   64 20 6E 75 6D
	   62 65 72 3A 20
	   00
 0000011B 54 68 69 72 64	 third_number_string	BYTE	"Third number: ", 0																; Variable to display the "Third number" string
	   20 6E 75 6D 62
	   65 72 3A 20 00
 0000012A 20 2B 20 00		 plus_sign_symbol		BYTE	" + ",0																			; Variable symbol to add the "+" string
 0000012E 20 3D 20 00		 equal_sign				BYTE	" = ", 0																		; Variable symbol to add the "=" string
 00000132 20 2D 20 00		 subtract_sign_symbol	BYTE	" - ", 0																		; Variable symbol to add the "-" string
 00000136 00000000		 sum_a_b				DWORD	?																				; Creates the variable to add A + B						
 0000013A 00000000		 sum_a_c				DWORD	?																				; Creates the Variable to add A + C
 0000013E 00000000		 difference_a_c			DWORD	?																				; Creates the variable to subtract A - C
 00000142 00000000		 difference_b_c			DWORD	?																				; Creates the variable to Subtract B - C
 00000146 00000000		 sum_a_b_c				DWORD	?																				; Creates the Variables to add A + B + C


 00000000			.code
 00000000			main PROC

					; Introduction
						; Display your name and program title on the output screen
						; Display Instructions for the user

 00000000  BA 00000009 R			mov		EDX, offset programtitle
 00000005  E8 00000000 E			call	WriteString
 0000000A  BA 00000000 R			mov		EDX, offset username
 0000000F  E8 00000000 E			call	WriteString
 00000014  E8 00000000 E			call	Crlf
 00000019  BA 00000024 R			mov		EDX, offset introduction
 0000001E  E8 00000000 E			call	WriteString
 00000023  E8 00000000 E			call	Crlf



					; Get the Data
						; Prompt the user to enter three numbers (A, B, C) in strictly descending order
						; Prompt for the first number
 00000028  BA 0000006B R			mov		EDX, offset prompt_1
 0000002D  E8 00000000 E			call	WriteString
 00000032  E8 00000000 E			call	readdec
 00000037  A3 000000B7 R			mov		first_number, EAX

						; Prompt for the second number input
 0000003C  BA 00000084 R			mov		EDX, offset	prompt_2
 00000041  E8 00000000 E			call	WriteString	
 00000046  E8 00000000 E			call	readdec
 0000004B  A3 000000BB R			mov		second_number, EAX

						; Prompt for the third number
 00000050  BA 0000009E R			mov		EDX, offset prompt_3
 00000055  E8 00000000 E			call	WriteString
 0000005A  E8 00000000 E			call	readdec
 0000005F  A3 000000BF R			mov		third_number, EAX
 00000064  E8 00000000 E			call	Crlf




					; Calculate the required values
						; calculate A + B
 00000069  A1 000000B7 R			mov		EAX, first_number
 0000006E  03 05 000000BB R			add		EAX, second_number	
 00000074  A3 00000136 R			mov		sum_a_b, EAX


						; Calculate A - B
 00000079  A1 000000B7 R			mov		EAX, first_number
 0000007E  2B 05 000000BB R			sub		EAX, second_number
 00000084  A3 000000F8 R			mov		difference, EAX

						; Calculate A + C
 00000089  A1 000000B7 R			mov		EAX, first_number
 0000008E  03 05 000000BF R			add		EAX, third_number
 00000094  A3 0000013A R			mov		sum_a_c, EAX

						; Calculate A - C
 00000099  A1 000000B7 R			mov		EAX, first_number
 0000009E  2B 05 000000BF R			SUB		EAX, third_number
 000000A4  A3 0000013E R			mov		difference_a_c, EAX

						; Calculate B + C
 000000A9  A1 000000BB R			mov		EAX, second_number
 000000AE  03 05 000000BF R			add		EAX, third_number
 000000B4  A3 000000F4 R			mov		sum, EAX

						; Calculate B - C
 000000B9  A1 000000BB R			mov		EAX, second_number
 000000BE  2B 05 000000BF R			sub		EAX, third_number
 000000C4  A3 00000142 R			mov		difference_b_c, EAX

						; Calculate A + B +C
 000000C9  A1 000000B7 R			mov		EAX, first_number
 000000CE  03 05 000000BB R			add		EAX, second_number
 000000D4  03 05 000000BF R			add		EAX, third_number
 000000DA  A3 00000146 R			mov		sum_a_b_c, EAX



					; Calculate and display the sum and differences: (A+B, A-B, A + C, A - C, B + C, B - C, A + B + C)

						; Get the numbers for A, B, C by getting the prompts
 000000DF  A1 000000B7 R			mov		EAX, first_number
 000000E4  BA 000000FC R			mov		EDX, offset first_number_string
 000000E9  E8 00000000 E			call	WriteString
 000000EE  E8 00000000 E			call	WriteDec
 000000F3  E8 00000000 E			call	Crlf
 000000F8  A1 000000BB R			mov		EAX,second_number
 000000FD  BA 0000010B R			mov		EDX, offset second_number_string
 00000102  E8 00000000 E			call	WriteString
 00000107  E8 00000000 E			call	WriteDec
 0000010C  E8 00000000 E			call	Crlf
 00000111  A1 000000BF R			mov		EAX, third_number
 00000116  BA 0000011B R			mov		EDX, offset third_number_string
 0000011B  E8 00000000 E			call	WriteString
 00000120  E8 00000000 E			call	WriteDec
 00000125  E8 00000000 E			call	Crlf

						; add and display A + B = sum
 0000012A  E8 00000000 E			call	Crlf
 0000012F  A1 000000B7 R			mov		EAX, first_number
 00000134  E8 00000000 E			call	WriteDec
 00000139  BA 0000012A R			mov		EDX, offset plus_sign_symbol
 0000013E  A1 000000BB R			mov		EAX, second_number
 00000143  E8 00000000 E			call	WriteString
 00000148  E8 00000000 E			call	WriteDec
 0000014D  BA 0000012E R			mov		EDX, offset equal_sign
 00000152  A1 00000136 R			mov		EAX, sum_a_b
 00000157  E8 00000000 E			call	WriteString
 0000015C  E8 00000000 E			call	WriteDec

						; Subtract and display A - B = difference
 00000161  E8 00000000 E			call	Crlf
 00000166  A1 000000B7 R			mov		EAX, first_number
 0000016B  E8 00000000 E			call	WriteDec
 00000170  BA 00000132 R			mov		EDX, offset subtract_sign_symbol
 00000175  A1 000000BB R			mov		EAX, second_number
 0000017A  E8 00000000 E			call	WriteString
 0000017F  E8 00000000 E			call	WriteDec
 00000184  BA 0000012E R			mov		EDX, offset equal_sign
 00000189  E8 00000000 E			call	WriteString
 0000018E  A1 000000F8 R			mov		EAX, difference
 00000193  E8 00000000 E			call	WriteDec

						; Add and display A + C = sum
 00000198  E8 00000000 E			call	Crlf
 0000019D  A1 000000B7 R			mov		EAX, first_number
 000001A2  E8 00000000 E			call	WriteDec
 000001A7  BA 0000012A R			mov		EDX, offset plus_sign_symbol
 000001AC  A1 000000BF R			mov		EAX, third_number
 000001B1  E8 00000000 E			call	WriteString
 000001B6  E8 00000000 E			call	WriteDec
 000001BB  BA 0000012E R			mov		EDX, offset equal_sign
 000001C0  E8 00000000 E			call	WriteString
 000001C5  A1 0000013A R			mov		EAX, sum_a_c
 000001CA  E8 00000000 E			call	WriteDec

						;Subtract and Display A - C = Difference
 000001CF  E8 00000000 E			call	Crlf
 000001D4  A1 000000B7 R			mov		EAX, first_number
 000001D9  E8 00000000 E			call	WriteDec
 000001DE  BA 00000132 R			mov		EDX, offset subtract_sign_symbol
 000001E3  A1 000000BF R			mov		EAX, third_number
 000001E8  E8 00000000 E			call	WriteString
 000001ED  E8 00000000 E			call	WriteDec
 000001F2  BA 0000012E R			mov		EDX, offset equal_sign
 000001F7  E8 00000000 E			call	WriteString
 000001FC  A1 0000013E R			mov		EAX, difference_a_c
 00000201  E8 00000000 E			call	WriteDec

						; Add and Display B + C = sum
 00000206  E8 00000000 E			call	Crlf
 0000020B  A1 000000BB R			mov		EAX, second_number
 00000210  E8 00000000 E			call	WriteDec
 00000215  BA 0000012A R			mov		EDX, offset plus_sign_symbol
 0000021A  A1 000000BF R			mov		EAX, third_number
 0000021F  E8 00000000 E			call	WriteString
 00000224  E8 00000000 E			call	WriteDec
 00000229  BA 0000012E R			mov		EDX, offset equal_sign
 0000022E  E8 00000000 E			call	WriteString
 00000233  A1 000000F4 R			mov		EAX, sum
 00000238  E8 00000000 E			call	WriteDec

						; Subtract and display B - C = difference
 0000023D  E8 00000000 E			call	Crlf
 00000242  A1 000000BB R			mov		EAX, second_number
 00000247  E8 00000000 E			call	WriteDec
 0000024C  BA 00000132 R			mov		EDX, offset subtract_sign_symbol
 00000251  A1 000000BF R			mov		EAX, third_number
 00000256  E8 00000000 E			call	WriteString
 0000025B  E8 00000000 E			call	WriteDec
 00000260  BA 0000012E R			mov		EDX, offset equal_sign
 00000265  E8 00000000 E			call	WriteString
 0000026A  A1 00000142 R			mov		EAX, difference_b_c
 0000026F  E8 00000000 E			call	WriteDec

						; Add and Display A + B + C = Sum
 00000274  E8 00000000 E			call	Crlf
 00000279  A1 000000B7 R			mov		EAX, first_number
 0000027E  E8 00000000 E			call	WriteDec
 00000283  BA 0000012A R			mov		EDX, offset plus_sign_symbol
 00000288  A1 000000BB R			mov		EAX, second_number
 0000028D  E8 00000000 E			call	WriteString
 00000292  E8 00000000 E			call	WriteDec
 00000297  BA 0000012A R			mov		EDX, offset plus_sign_symbol
 0000029C  A1 000000BF R			mov		EAX, third_number
 000002A1  E8 00000000 E			call	WriteString
 000002A6  E8 00000000 E			call	WriteDec
 000002AB  BA 0000012E R			mov		EDX, offset equal_sign
 000002B0  E8 00000000 E			call	WriteString
 000002B5  A1 00000146 R			mov		EAX, sum_a_b_c
 000002BA  E8 00000000 E			call	WriteDec
 000002BF  E8 00000000 E			call	Crlf

					; Say goodbye
						; Display a closing message
 000002C4  E8 00000000 E			call	Crlf
 000002C9  BA 000000C3 R			mov		EDX, offset	closing_message
 000002CE  E8 00000000 E			call	WriteString
 000002D3  E8 00000000 E			call	Crlf


					Invoke ExitProcess,0	; exit to operating system
 000002D8  6A 00	   *	    push   +000000000h
 000002DA  E8 00000000 E   *	    call   ExitProcess
 000002DF			main ENDP

				; (insert additional procedures here)

				END main
Microsoft (R) Macro Assembler Version 14.29.30146.0	    10/11/22 21:28:50
8Project One Basic Arithmetic Program     (Proj1_dyb.asm     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000014A Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000002DF Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000002DF Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
closing_message  . . . . . . . .	Byte	 000000C3 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
difference_a_c . . . . . . . . .	DWord	 0000013E _DATA	
difference_b_c . . . . . . . . .	DWord	 00000142 _DATA	
difference . . . . . . . . . . .	DWord	 000000F8 _DATA	
equal_sign . . . . . . . . . . .	Byte	 0000012E _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
first_number_string  . . . . . .	Byte	 000000FC _DATA	
first_number . . . . . . . . . .	DWord	 000000B7 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
introduction . . . . . . . . . .	Byte	 00000024 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
plus_sign_symbol . . . . . . . .	Byte	 0000012A _DATA	
programtitle . . . . . . . . . .	Byte	 00000009 _DATA	
prompt_1 . . . . . . . . . . . .	Byte	 0000006B _DATA	
prompt_2 . . . . . . . . . . . .	Byte	 00000084 _DATA	
prompt_3 . . . . . . . . . . . .	Byte	 0000009E _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
second_number_string . . . . . .	Byte	 0000010B _DATA	
second_number  . . . . . . . . .	DWord	 000000BB _DATA	
subtract_sign_symbol . . . . . .	Byte	 00000132 _DATA	
sum_a_b_c  . . . . . . . . . . .	DWord	 00000146 _DATA	
sum_a_b  . . . . . . . . . . . .	DWord	 00000136 _DATA	
sum_a_c  . . . . . . . . . . . .	DWord	 0000013A _DATA	
sum  . . . . . . . . . . . . . .	DWord	 000000F4 _DATA	
third_number_string  . . . . . .	Byte	 0000011B _DATA	
third_number . . . . . . . . . .	DWord	 000000BF _DATA	
username . . . . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
